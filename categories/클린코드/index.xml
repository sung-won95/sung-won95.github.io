<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>클린코드 on 성원의 개발 블로그</title>
    <link>https://sung-won95.github.io/categories/%ED%81%B4%EB%A6%B0%EC%BD%94%EB%93%9C/</link>
    <description>Recent content in 클린코드 on 성원의 개발 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>euc-kr</language>
    <lastBuildDate>Wed, 19 Jan 2022 10:24:37 +0900</lastBuildDate><atom:link href="https://sung-won95.github.io/categories/%ED%81%B4%EB%A6%B0%EC%BD%94%EB%93%9C/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>1장 클린코드</title>
      <link>https://sung-won95.github.io/p/1%EC%9E%A5-%ED%81%B4%EB%A6%B0%EC%BD%94%EB%93%9C/</link>
      <pubDate>Wed, 19 Jan 2022 10:24:37 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/1%EC%9E%A5-%ED%81%B4%EB%A6%B0%EC%BD%94%EB%93%9C/</guid>
      <description>1장 - 깨끗한 코드 나쁜코드는 생산성을 떨어트린다 (개발방향을 산정하지 않은코드는 생산성을 떨어트린다)
C++ 창시자 나는 우아하고 효율적인 코드를 좋아한다. 논리가 간단해야 버그가 없기 때문이다. 의존성을 줄여야 유지보수가 쉬워진다. 깨끗한 코드는 한가지를 제대로 한다. 깨끗한 코드는 단순하고 직접적이다. 깨끗한 코드는 잘 쓴 문장처럼 잘 읽히고 설계자의 의도를 바로 알 수 있다. 오히려 명쾌한 추상화와 단순한 제어문으로 가득하다 코드는 추측이아니라 사실에 기반해야한다. 반드시 필요한 내용만 담아야하며 단호하게 끝내야한다. 이클립스 창시자 깨끗한 코드는 작성자가 아닌 사람도 읽기쉽고 고치기 쉽다.</description>
    </item>
    
    <item>
      <title>2장 함수</title>
      <link>https://sung-won95.github.io/p/2%EC%9E%A5-%ED%95%A8%EC%88%98/</link>
      <pubDate>Wed, 19 Jan 2022 09:24:37 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/2%EC%9E%A5-%ED%95%A8%EC%88%98/</guid>
      <description>함수를 만드는 규칙 1. 작게 만들어라!  작아지면 코드가 단순 명료해지기에 이해하기 쉬워진다 어떻게 작게 만드나? 단순히 짧게 만들면 되는 것인가? → 아래의 내용에서 추가됨.  2. 한가지 기능만 해라  기능의 단위를 통해 작게 만들면 된다. 그렇다면 그 기능의 단위를 어디까지 볼것인가?  추상화 수준으로 구분하면 된다.   추가로 단순히 다른 표현이 아니라 의미 있는 이름으로 다른 함수를 추출할 수 있다면 그 함수는 여러 작업을 하는 것으로 판단할 수 있다.</description>
    </item>
    
    <item>
      <title>3장 주석</title>
      <link>https://sung-won95.github.io/p/3%EC%9E%A5-%EC%A3%BC%EC%84%9D/</link>
      <pubDate>Wed, 19 Jan 2022 09:24:37 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/3%EC%9E%A5-%EC%A3%BC%EC%84%9D/</guid>
      <description>주석의 개념  코드로 직접 실행되지 않지만 코드를 설명하는 문장이나 글  저자가 바라보는 주석이란? 잘달린 주석은 그 어떤 정보보다 유용하다
나쁜 주석은 코드를 이해하기 어렵게 만든다.
오래되고 조잡한 주석은 거짓과 잘못된 정보를 퍼뜨려 해악을 미친다.
저자의 표현으로는 사실상 주석은 기껏해야 필요악이라고 한다.
코드로 의도를 표현하지 못해 실패를 만회하기 위해 주석을 사용한다.
코드는 변화하고 진화한다.
하지만 주석은 그 코드를 언제나 따라가진 않는다.
그렇게 주석이 코드에서 분리되어 점점 더 부정확한 고아로 변하는 사례가 흔하다고 한다.</description>
    </item>
    
  </channel>
</rss>
