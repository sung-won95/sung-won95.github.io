<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 성원의 개발 블로그</title>
    <link>https://sung-won95.github.io/post/</link>
    <description>Recent content in Posts on 성원의 개발 블로그</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>euc-kr</language>
    <lastBuildDate>Tue, 25 Jan 2022 10:24:37 +0900</lastBuildDate><atom:link href="https://sung-won95.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>5장 객체와 자료구조</title>
      <link>https://sung-won95.github.io/p/5%EC%9E%A5-%EA%B0%9D%EC%B2%B4%EC%99%80-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</link>
      <pubDate>Tue, 25 Jan 2022 10:24:37 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/5%EC%9E%A5-%EA%B0%9D%EC%B2%B4%EC%99%80-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/</guid>
      <description>객체 변수를 비공개로 정의하는 이유가 있다. 남들이 변수에 의존하지 않게 만들고 싶어서다. 충동이든 변덕이든 변수 타입이나 구현을 맘대로 바꾸고 싶어서다. 그렇다면 어째서 수많은 프로그래머가 조회 함수와 설정 함수를 당연하게 공개 해 비공개 변수를 외부에 노출할까?
자료 추상화 아래 두가지 코드가 있다. 두 클래스 모두 2차원 점을 표현한다. 그런데 한 클래스는 구현을 외부로 노출하고 다른 클래스는 구현을 완전히 숨긴다.
public class Point{ public double x; public double y; } public class Point { private double x; private double y; public double getX(); public double getY(); public void setCartesian(double x, double y); } 아래 목록은 직교좌표계를 사용하는지 극좌표계를 사용하는 지 알 길이 없다.</description>
    </item>
    
    <item>
      <title>2021년 회고 및 2022 목표!</title>
      <link>https://sung-won95.github.io/p/2021%EB%85%84-%ED%9A%8C%EA%B3%A0-%EB%B0%8F-2022-%EB%AA%A9%ED%91%9C/</link>
      <pubDate>Fri, 21 Jan 2022 08:58:32 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/2021%EB%85%84-%ED%9A%8C%EA%B3%A0-%EB%B0%8F-2022-%EB%AA%A9%ED%91%9C/</guid>
      <description>나의 첫 회고록 나는 글 쓰는것을 좋아하는 사람이 아니다. 그렇지만 요새 글쓰기, 기록의 필요성을 피부로 느끼고있어 만들어 놓고 방치한 내 블로그를 다시 써보기로 마음먹었다. 책을 정리하는 글 또는 정보를 전달하는 글이 아닌 내 생각을 전달하는 글을 쓰는건 처음이라 매우 어색하지만 쓰다보면 조금씩 나아질 것이라고 믿는다.
창업 누가 나에게 2021년 가장 큰 일은 뭐야? 라고 물어본다면 난 주저하지 않고 팀빌딩해서 창업한거라고 말 할 것이다
창업하고 모든 것은 나에게 새로운 일이였고 그렇기에 재밌었다.</description>
    </item>
    
    <item>
      <title>1장 클린코드</title>
      <link>https://sung-won95.github.io/p/1%EC%9E%A5-%ED%81%B4%EB%A6%B0%EC%BD%94%EB%93%9C/</link>
      <pubDate>Wed, 19 Jan 2022 10:24:37 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/1%EC%9E%A5-%ED%81%B4%EB%A6%B0%EC%BD%94%EB%93%9C/</guid>
      <description>1장 - 깨끗한 코드 나쁜코드는 생산성을 떨어트린다 (개발방향을 산정하지 않은코드는 생산성을 떨어트린다)
C++ 창시자 나는 우아하고 효율적인 코드를 좋아한다. 논리가 간단해야 버그가 없기 때문이다. 의존성을 줄여야 유지보수가 쉬워진다. 깨끗한 코드는 한가지를 제대로 한다. 깨끗한 코드는 단순하고 직접적이다. 깨끗한 코드는 잘 쓴 문장처럼 잘 읽히고 설계자의 의도를 바로 알 수 있다. 오히려 명쾌한 추상화와 단순한 제어문으로 가득하다 코드는 추측이아니라 사실에 기반해야한다. 반드시 필요한 내용만 담아야하며 단호하게 끝내야한다. 이클립스 창시자 깨끗한 코드는 작성자가 아닌 사람도 읽기쉽고 고치기 쉽다.</description>
    </item>
    
    <item>
      <title>2장 함수</title>
      <link>https://sung-won95.github.io/p/2%EC%9E%A5-%ED%95%A8%EC%88%98/</link>
      <pubDate>Wed, 19 Jan 2022 09:24:37 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/2%EC%9E%A5-%ED%95%A8%EC%88%98/</guid>
      <description>함수 함수는 굉장히 작게 만들어야한다. 함수가 커지면 커질수록 한번에 읽고 파악해야하는 코드의 양이 커져 이해하기 어렵다. 그렇기 때문에 함수는 아주 작은 기능 한개만 하는것을 만들고 작은 함수들이 모여 하나의 기능을 실행하게 만들어야한다. 이번장은 함수를 만들때 몇가지 규칙을 알려준다. 이 규칙을 다 지킬수는 없겠지만 지키려는 노력을 하다보면 내 코드가 조금씩 더 나아지며 뿌듯해질것이다!
함수를 만드는 규칙 작게 만들어라!  작아지면 코드가 단순 명료해지기에 이해하기 쉬워진다 어떻게 작게 만드나? 단순히 짧게 만들면 되는 것인가?</description>
    </item>
    
    <item>
      <title>3장 주석</title>
      <link>https://sung-won95.github.io/p/3%EC%9E%A5-%EC%A3%BC%EC%84%9D/</link>
      <pubDate>Wed, 19 Jan 2022 09:24:37 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/3%EC%9E%A5-%EC%A3%BC%EC%84%9D/</guid>
      <description>주석의 개념  코드로 직접 실행되지 않지만 코드를 설명하는 문장이나 글  저자가 바라보는 주석이란? 잘 달린 주석은 그 어떤 정보보다 유용하다. 다만 보통 주석은 오래되고 조잡하며 거짓과 잘못된 정보를 줘 코드를 이해하기 어렵게 만든다. 저자의 표현으로는 사실상 주석은 기껏해야 필요악이라고 한다. 코드로 본인의 의도를 잘 표현하지 못해 주석을 쓴 것이고 본인의 실패를 만회하기위해 사용한다고 한다. 코드는 지속적인 리팩토링으로 점점 진화하면서 완벽해진다. 하지만 주석은 언제나 코드를 따라 변하지 못한다. 그렇게 주석이 코드에서 분리되어 점점 더 부정확해지고 마침내 고아로 변하는 사례가 흔하다고 한다.</description>
    </item>
    
    <item>
      <title>4장 형식 맞추기</title>
      <link>https://sung-won95.github.io/p/4%EC%9E%A5-%ED%98%95%EC%8B%9D-%EB%A7%9E%EC%B6%94%EA%B8%B0/</link>
      <pubDate>Wed, 19 Jan 2022 09:24:37 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/4%EC%9E%A5-%ED%98%95%EC%8B%9D-%EB%A7%9E%EC%B6%94%EA%B8%B0/</guid>
      <description>형식 맞추기 코드가 깔끔하고, 일관적이며, 꼼꼼하다고 감탄하면 좋겠다. 질서 정연하다고 탄복하면 좋겠다. 모듈을 읽으며 두눈이 휘둥그래 놀라면 좋겠다. 전문가가 짰다는 인상을 심어주면 좋겠다. 프로그래머라면 형식을 깔끔하게 맞춰 코드를 짜야한다. 규칙을 정하고 착실히 따라야한다. 팀으로 일한다면 팀이 합의해 규칙을 정하고 모두가 그 규칙을 따라야 한다.
형식을 맞추는 목적 코드 형식은 중요하다! 너무 중요해서 무시하기 어렵다. 의사소통의 일환이며 전문 개발자의 일차적인 의무이다. &amp;lsquo;돌아가는 코드&amp;rsquo; 가 전문 개발자의 일차적인 의무라 여길지도 모르겠다. 오랜 시간이 지나 원래 코드의 흔적을 더 이상 찾아보기 힘들 정도로 코드가 바뀌어도 맨 처음 잡아놓은 규율은 사라지지 않는다.</description>
    </item>
    
    <item>
      <title>뉴스 기사 크롤링을 통한 키워드 추출 및 실시간 트렌드 제공 서비스 [Trendak]</title>
      <link>https://sung-won95.github.io/p/%EB%89%B4%EC%8A%A4-%EA%B8%B0%EC%82%AC-%ED%81%AC%EB%A1%A4%EB%A7%81%EC%9D%84-%ED%86%B5%ED%95%9C-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%B6%94%EC%B6%9C-%EB%B0%8F-%EC%8B%A4%EC%8B%9C%EA%B0%84-%ED%8A%B8%EB%A0%8C%EB%93%9C-%EC%A0%9C%EA%B3%B5-%EC%84%9C%EB%B9%84%EC%8A%A4-trendak/</link>
      <pubDate>Mon, 04 Jan 2021 08:58:32 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/%EB%89%B4%EC%8A%A4-%EA%B8%B0%EC%82%AC-%ED%81%AC%EB%A1%A4%EB%A7%81%EC%9D%84-%ED%86%B5%ED%95%9C-%ED%82%A4%EC%9B%8C%EB%93%9C-%EC%B6%94%EC%B6%9C-%EB%B0%8F-%EC%8B%A4%EC%8B%9C%EA%B0%84-%ED%8A%B8%EB%A0%8C%EB%93%9C-%EC%A0%9C%EA%B3%B5-%EC%84%9C%EB%B9%84%EC%8A%A4-trendak/</guid>
      <description>안녕하세요 오늘은 사업계획서를 공유해보려고 합니다. 이 글은 작년 10월 모 창업 경진대회에 제출한 문서를 거의 그대로 옮겼습니다. 해당 대회에서 본선에는 들었지만 발표평가에서 떨어진 문서입니다. 사업계획서를 쓰시는 분들께 도움이 되었으면 합니다. 더불어서 피드백은 언제나 환영입니다!
1-1. 제품의 차별성 실시간성  1분단위의 실시간 모니터링을 통해 누구보다 빠른 정보전달 가능 기존 어플리케이션들의 서비스 제공 시간폭은 유료 기준 30분 - 1시간 소요  능동적 정보제공  굳이 찾아보지 않아도 알아서 방대한 양의 정보를 정리하여 제공해줌 바쁜 현대인들에게 스스로 시의성 있는 정보와 트렌드를 전달함  제목 기반 키워드 제공  자동 요약 시스템을 통해 부담 없이 손쉽게 트렌드 파악 가능 기사 전체가 아닌 이미 요약되어 있는 제목만을 크롤링 함으로써 더 빠르고 적은 데이터로 서비스 구축 가능  접근성  별도의 앱 설치 없이 카카오톡 챗봇을 이용하여 누구나 쉽게 사용 가능  안드로이드&amp;amp;IOS 이용자 모두 이용가능   앱 알람이 아닌 다수가 사용하는 카카오톡 메시지 알람으로 다른 앱 이용보다 번거로움이 적음  확장성   내용을 집약하여 제목을 작성하는 다른 데이터에 동일한 메커니즘 적용 가능</description>
    </item>
    
    <item>
      <title>Opencv를 이용하여 YOLOv4로 CCTV 영상 분석하기</title>
      <link>https://sung-won95.github.io/p/opencv%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-yolov4%EB%A1%9C-cctv-%EC%98%81%EC%83%81-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/</link>
      <pubDate>Tue, 24 Nov 2020 14:02:42 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/opencv%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-yolov4%EB%A1%9C-cctv-%EC%98%81%EC%83%81-%EB%B6%84%EC%84%9D%ED%95%98%EA%B8%B0/</guid>
      <description>프롤로그 안녕하세요 오늘은 OpenCV를 사용하여 CCTV video stream(RTSP)에 YOLO를 돌린 프로젝트 후기를 남겨보려고 합니다. 이 프로젝트는 실시간으로 object detecting 하는 것을 최우선 목표로 진행했습니다. 2K CCTV에서 RTSP 서버를 열어주고 딥러닝(YOLO v4)을 통해 object detecting을 진행 한 뒤 모니터링 서버에서 보여줄때까지 지연시간이 2초 이하로 진행해야 했습니다.
환경 &amp;amp; 목표 w
 CCTV : 2K RTSP Stream, 16EA Network : 10G GPU : Tesla T4, 8EA AI Model : YOLO v4, 5개 object 구분 목표 : 모니터링 서버에서 2초 이내 detecting object 확인  설계도 RTSP → YOLO v4(분석) | Tesla T4 이용 → View</description>
    </item>
    
    <item>
      <title>postgres replication 하는방법</title>
      <link>https://sung-won95.github.io/p/postgres-replication-%ED%95%98%EB%8A%94%EB%B0%A9%EB%B2%95/</link>
      <pubDate>Fri, 20 Nov 2020 16:54:37 +0900</pubDate>
      
      <guid>https://sung-won95.github.io/p/postgres-replication-%ED%95%98%EB%8A%94%EB%B0%A9%EB%B2%95/</guid>
      <description>master 서버와 slave 서버에 각각 설정하는 방법이 다릅니다
MASTER 설정   user 생성
# psql을 Postgres 유저로 접속 후 유저 생성 sudo -u postgres psql CREATE ROLE replication WITH REPLICATION PASSWORD &amp;#39;password&amp;#39; LOGIN;   /etc/postgresql/9.5/main/postgresql.conf 파일 수정
wal_level = hot_standby max_wal_senders = 2 max_replication_slots = 2   /etc/postgresql/9.5/main/hba.conf 파일 수정
아래 문구 추가
host all all 192.168.0.138/24 trust host replication replication 192.168.0.138/24 md5 host all all ::1/128 trust   postgresql 재시작</description>
    </item>
    
  </channel>
</rss>
